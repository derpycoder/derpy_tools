# Meilisearch

## Section

```elixir
keys =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
  )
  |> Req.get!(url: "/keys")
```

```elixir
use Pathex

search_key = Pathex.get(keys, path(:body / "results" / 0 / "key"))
```

```elixir
Req.new(
  base_url: "http://localhost:7700",
  auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
)
|> Req.get!(url: "/indexes")
```

```elixir
searchResult =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, search_key}
  )
  |> Req.post!(
    url: "/indexes/blog-posts/search",
    json: %{
      attributesToHighlight: ["*"],
      facets: [],
      highlightPreTag: "<yay>",
      highlightPostTag: "</yay>",
      limit: 21,
      offset: 0,
      q: "pc"
    }
  )
```

```elixir
searchResult.body["estimatedTotalHits"]
```

## Settings

```elixir
Req.new(
  base_url: "http://localhost:7700",
  auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
)
|> Req.get!(url: "/indexes/blog-posts/settings")
```

## Multi Search

```elixir
search_results =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, search_key}
  )
  |> Req.post!(
    url: "/multi-search",
    json: %{
      queries: [
        %{
          indexUid: "blog-posts",
          q: "c",
          attributesToHighlight: ["*"],
          highlightPreTag: "<yay>",
          highlightPostTag: "</yay>",
          showRankingScore: true
        },
        %{
          indexUid: "blog-tags",
          q: "c",
          attributesToHighlight: ["*"],
          highlightPreTag: "<yay>",
          highlightPostTag: "</yay>",
          limit: 10
        },
        %{
          indexUid: "blog-authors",
          q: "c",
          attributesToHighlight: ["*"],
          highlightPreTag: "<yay>",
          highlightPostTag: "</yay>",
          limit: 10
        },
        %{
          indexUid: "routes",
          q: "c",
          attributesToHighlight: ["*"],
          highlightPreTag: "<yay>",
          highlightPostTag: "</yay>",
          limit: 10
        }
      ]
    }
  )
```

```elixir
search_results.body["results"]
|> Enum.reduce({0, 0}, fn
  result, {total_hits, processing_time} ->
    total_hits = total_hits + result["estimatedTotalHits"]
    processing_time = max(processing_time, result["processingTimeMs"])
    {total_hits, processing_time}
end)
```

## Filters

```elixir
search_results =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, search_key}
  )
  |> Req.post!(
    url: "/indexes/blog-posts/search",
    json: %{
      attributesToHighlight: ["*"],
      facets: [],
      highlightPreTag: "<yay>",
      highlightPostTag: "</yay>",
      limit: 21,
      offset: 0,
      showRankingScore: true,
      q: "com",
      filter: "tags = \"Command Line Tools\" AND release_date > 1674777600"
    }
  )
```

## Facets

```elixir
search_results =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, search_key}
  )
  |> Req.post!(
    url: "/indexes/blog-posts/search",
    json: %{
      attributesToHighlight: ["*"],
      highlightPreTag: "<yay>",
      highlightPostTag: "</yay>",
      limit: 21,
      offset: 0,
      showRankingScore: true,
      q: "com",
      facets: [
        "tags"
      ],
      filter: "tags = \"Command Line Tools\" AND release_date > 1674777600"
    }
  )
```

```elixir
stats =
  Req.new(
    base_url: "http://localhost:7700",
    auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
  )
  |> Req.get!(url: "/stats")

stats.body
```

## Tasks

```elixir
Req.new(
  base_url: "http://localhost:7700",
  auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
)
|> Req.get!(url: "/tasks")
```

## Change Index

```elixir
Req.new(
  base_url: "http://localhost:7700",
  auth: {:bearer, System.fetch_env!("LB_MEILISEARCH_MASTER_KEY")}
)
|> Req.get!(
  url: "/indexes/routes/search",
  json: %{
    attributesToHighlight: ~w(name),
    highlightPreTag: "<span class=\"text-pink-500\">",
    highlightPostTag: "</span>",
    q: ""
  }
)
```

<!-- livebook:{"offset":4093,"stamp":{"token":"QTEyOEdDTQ.ev6XUYvArOH2HLlBwxjGAER3iq4mlQP3-hYK--EMWSQPR0OOENAcppuBomM.3KB5-11_84smepST.yAgDazbD4fD87cs5r9QMkcWZsJx2DGuWSUN_BUIPHCeZuuV6HfhwovQiTaXAj_vLhaOuaeKMOGy0.sNAyCfU1z69U5wh2VGpjQQ","version":1}} -->
